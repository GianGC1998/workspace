/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as DatosProviderIndexImport } from './routes/datos/provider/index'
import { Route as DatosItemsIndexImport } from './routes/datos/items/index'
import { Route as DatosCategoryIndexImport } from './routes/datos/category/index'
import { Route as DatosProviderCreateImport } from './routes/datos/provider/create'
import { Route as DatosItemsCreateImport } from './routes/datos/items/create'
import { Route as DatosCategoryCreateImport } from './routes/datos/category/create'
import { Route as DatosProviderViewIdImport } from './routes/datos/provider/view/$id'
import { Route as DatosProviderEditIdImport } from './routes/datos/provider/edit/$id'
import { Route as DatosItemsViewIdImport } from './routes/datos/items/view/$id'
import { Route as DatosItemsEditIdImport } from './routes/datos/items/edit/$id'
import { Route as DatosCategoryEditIdImport } from './routes/datos/category/edit/$id'

// Create Virtual Routes

const LoginLazyImport = createFileRoute('/login')()
const DashboardLazyImport = createFileRoute('/dashboard')()

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const DashboardLazyRoute = DashboardLazyImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dashboard.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DatosProviderIndexRoute = DatosProviderIndexImport.update({
  id: '/datos/provider/',
  path: '/datos/provider/',
  getParentRoute: () => rootRoute,
} as any)

const DatosItemsIndexRoute = DatosItemsIndexImport.update({
  id: '/datos/items/',
  path: '/datos/items/',
  getParentRoute: () => rootRoute,
} as any)

const DatosCategoryIndexRoute = DatosCategoryIndexImport.update({
  id: '/datos/category/',
  path: '/datos/category/',
  getParentRoute: () => rootRoute,
} as any)

const DatosProviderCreateRoute = DatosProviderCreateImport.update({
  id: '/datos/provider/create',
  path: '/datos/provider/create',
  getParentRoute: () => rootRoute,
} as any)

const DatosItemsCreateRoute = DatosItemsCreateImport.update({
  id: '/datos/items/create',
  path: '/datos/items/create',
  getParentRoute: () => rootRoute,
} as any)

const DatosCategoryCreateRoute = DatosCategoryCreateImport.update({
  id: '/datos/category/create',
  path: '/datos/category/create',
  getParentRoute: () => rootRoute,
} as any)

const DatosProviderViewIdRoute = DatosProviderViewIdImport.update({
  id: '/datos/provider/view/$id',
  path: '/datos/provider/view/$id',
  getParentRoute: () => rootRoute,
} as any)

const DatosProviderEditIdRoute = DatosProviderEditIdImport.update({
  id: '/datos/provider/edit/$id',
  path: '/datos/provider/edit/$id',
  getParentRoute: () => rootRoute,
} as any)

const DatosItemsViewIdRoute = DatosItemsViewIdImport.update({
  id: '/datos/items/view/$id',
  path: '/datos/items/view/$id',
  getParentRoute: () => rootRoute,
} as any)

const DatosItemsEditIdRoute = DatosItemsEditIdImport.update({
  id: '/datos/items/edit/$id',
  path: '/datos/items/edit/$id',
  getParentRoute: () => rootRoute,
} as any)

const DatosCategoryEditIdRoute = DatosCategoryEditIdImport.update({
  id: '/datos/category/edit/$id',
  path: '/datos/category/edit/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/datos/category/create': {
      id: '/datos/category/create'
      path: '/datos/category/create'
      fullPath: '/datos/category/create'
      preLoaderRoute: typeof DatosCategoryCreateImport
      parentRoute: typeof rootRoute
    }
    '/datos/items/create': {
      id: '/datos/items/create'
      path: '/datos/items/create'
      fullPath: '/datos/items/create'
      preLoaderRoute: typeof DatosItemsCreateImport
      parentRoute: typeof rootRoute
    }
    '/datos/provider/create': {
      id: '/datos/provider/create'
      path: '/datos/provider/create'
      fullPath: '/datos/provider/create'
      preLoaderRoute: typeof DatosProviderCreateImport
      parentRoute: typeof rootRoute
    }
    '/datos/category/': {
      id: '/datos/category/'
      path: '/datos/category'
      fullPath: '/datos/category'
      preLoaderRoute: typeof DatosCategoryIndexImport
      parentRoute: typeof rootRoute
    }
    '/datos/items/': {
      id: '/datos/items/'
      path: '/datos/items'
      fullPath: '/datos/items'
      preLoaderRoute: typeof DatosItemsIndexImport
      parentRoute: typeof rootRoute
    }
    '/datos/provider/': {
      id: '/datos/provider/'
      path: '/datos/provider'
      fullPath: '/datos/provider'
      preLoaderRoute: typeof DatosProviderIndexImport
      parentRoute: typeof rootRoute
    }
    '/datos/category/edit/$id': {
      id: '/datos/category/edit/$id'
      path: '/datos/category/edit/$id'
      fullPath: '/datos/category/edit/$id'
      preLoaderRoute: typeof DatosCategoryEditIdImport
      parentRoute: typeof rootRoute
    }
    '/datos/items/edit/$id': {
      id: '/datos/items/edit/$id'
      path: '/datos/items/edit/$id'
      fullPath: '/datos/items/edit/$id'
      preLoaderRoute: typeof DatosItemsEditIdImport
      parentRoute: typeof rootRoute
    }
    '/datos/items/view/$id': {
      id: '/datos/items/view/$id'
      path: '/datos/items/view/$id'
      fullPath: '/datos/items/view/$id'
      preLoaderRoute: typeof DatosItemsViewIdImport
      parentRoute: typeof rootRoute
    }
    '/datos/provider/edit/$id': {
      id: '/datos/provider/edit/$id'
      path: '/datos/provider/edit/$id'
      fullPath: '/datos/provider/edit/$id'
      preLoaderRoute: typeof DatosProviderEditIdImport
      parentRoute: typeof rootRoute
    }
    '/datos/provider/view/$id': {
      id: '/datos/provider/view/$id'
      path: '/datos/provider/view/$id'
      fullPath: '/datos/provider/view/$id'
      preLoaderRoute: typeof DatosProviderViewIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardLazyRoute
  '/login': typeof LoginLazyRoute
  '/datos/category/create': typeof DatosCategoryCreateRoute
  '/datos/items/create': typeof DatosItemsCreateRoute
  '/datos/provider/create': typeof DatosProviderCreateRoute
  '/datos/category': typeof DatosCategoryIndexRoute
  '/datos/items': typeof DatosItemsIndexRoute
  '/datos/provider': typeof DatosProviderIndexRoute
  '/datos/category/edit/$id': typeof DatosCategoryEditIdRoute
  '/datos/items/edit/$id': typeof DatosItemsEditIdRoute
  '/datos/items/view/$id': typeof DatosItemsViewIdRoute
  '/datos/provider/edit/$id': typeof DatosProviderEditIdRoute
  '/datos/provider/view/$id': typeof DatosProviderViewIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardLazyRoute
  '/login': typeof LoginLazyRoute
  '/datos/category/create': typeof DatosCategoryCreateRoute
  '/datos/items/create': typeof DatosItemsCreateRoute
  '/datos/provider/create': typeof DatosProviderCreateRoute
  '/datos/category': typeof DatosCategoryIndexRoute
  '/datos/items': typeof DatosItemsIndexRoute
  '/datos/provider': typeof DatosProviderIndexRoute
  '/datos/category/edit/$id': typeof DatosCategoryEditIdRoute
  '/datos/items/edit/$id': typeof DatosItemsEditIdRoute
  '/datos/items/view/$id': typeof DatosItemsViewIdRoute
  '/datos/provider/edit/$id': typeof DatosProviderEditIdRoute
  '/datos/provider/view/$id': typeof DatosProviderViewIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardLazyRoute
  '/login': typeof LoginLazyRoute
  '/datos/category/create': typeof DatosCategoryCreateRoute
  '/datos/items/create': typeof DatosItemsCreateRoute
  '/datos/provider/create': typeof DatosProviderCreateRoute
  '/datos/category/': typeof DatosCategoryIndexRoute
  '/datos/items/': typeof DatosItemsIndexRoute
  '/datos/provider/': typeof DatosProviderIndexRoute
  '/datos/category/edit/$id': typeof DatosCategoryEditIdRoute
  '/datos/items/edit/$id': typeof DatosItemsEditIdRoute
  '/datos/items/view/$id': typeof DatosItemsViewIdRoute
  '/datos/provider/edit/$id': typeof DatosProviderEditIdRoute
  '/datos/provider/view/$id': typeof DatosProviderViewIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/datos/category/create'
    | '/datos/items/create'
    | '/datos/provider/create'
    | '/datos/category'
    | '/datos/items'
    | '/datos/provider'
    | '/datos/category/edit/$id'
    | '/datos/items/edit/$id'
    | '/datos/items/view/$id'
    | '/datos/provider/edit/$id'
    | '/datos/provider/view/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/datos/category/create'
    | '/datos/items/create'
    | '/datos/provider/create'
    | '/datos/category'
    | '/datos/items'
    | '/datos/provider'
    | '/datos/category/edit/$id'
    | '/datos/items/edit/$id'
    | '/datos/items/view/$id'
    | '/datos/provider/edit/$id'
    | '/datos/provider/view/$id'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/login'
    | '/datos/category/create'
    | '/datos/items/create'
    | '/datos/provider/create'
    | '/datos/category/'
    | '/datos/items/'
    | '/datos/provider/'
    | '/datos/category/edit/$id'
    | '/datos/items/edit/$id'
    | '/datos/items/view/$id'
    | '/datos/provider/edit/$id'
    | '/datos/provider/view/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardLazyRoute: typeof DashboardLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  DatosCategoryCreateRoute: typeof DatosCategoryCreateRoute
  DatosItemsCreateRoute: typeof DatosItemsCreateRoute
  DatosProviderCreateRoute: typeof DatosProviderCreateRoute
  DatosCategoryIndexRoute: typeof DatosCategoryIndexRoute
  DatosItemsIndexRoute: typeof DatosItemsIndexRoute
  DatosProviderIndexRoute: typeof DatosProviderIndexRoute
  DatosCategoryEditIdRoute: typeof DatosCategoryEditIdRoute
  DatosItemsEditIdRoute: typeof DatosItemsEditIdRoute
  DatosItemsViewIdRoute: typeof DatosItemsViewIdRoute
  DatosProviderEditIdRoute: typeof DatosProviderEditIdRoute
  DatosProviderViewIdRoute: typeof DatosProviderViewIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardLazyRoute: DashboardLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  DatosCategoryCreateRoute: DatosCategoryCreateRoute,
  DatosItemsCreateRoute: DatosItemsCreateRoute,
  DatosProviderCreateRoute: DatosProviderCreateRoute,
  DatosCategoryIndexRoute: DatosCategoryIndexRoute,
  DatosItemsIndexRoute: DatosItemsIndexRoute,
  DatosProviderIndexRoute: DatosProviderIndexRoute,
  DatosCategoryEditIdRoute: DatosCategoryEditIdRoute,
  DatosItemsEditIdRoute: DatosItemsEditIdRoute,
  DatosItemsViewIdRoute: DatosItemsViewIdRoute,
  DatosProviderEditIdRoute: DatosProviderEditIdRoute,
  DatosProviderViewIdRoute: DatosProviderViewIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/login",
        "/datos/category/create",
        "/datos/items/create",
        "/datos/provider/create",
        "/datos/category/",
        "/datos/items/",
        "/datos/provider/",
        "/datos/category/edit/$id",
        "/datos/items/edit/$id",
        "/datos/items/view/$id",
        "/datos/provider/edit/$id",
        "/datos/provider/view/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/datos/category/create": {
      "filePath": "datos/category/create.tsx"
    },
    "/datos/items/create": {
      "filePath": "datos/items/create.tsx"
    },
    "/datos/provider/create": {
      "filePath": "datos/provider/create.tsx"
    },
    "/datos/category/": {
      "filePath": "datos/category/index.tsx"
    },
    "/datos/items/": {
      "filePath": "datos/items/index.tsx"
    },
    "/datos/provider/": {
      "filePath": "datos/provider/index.tsx"
    },
    "/datos/category/edit/$id": {
      "filePath": "datos/category/edit/$id.tsx"
    },
    "/datos/items/edit/$id": {
      "filePath": "datos/items/edit/$id.tsx"
    },
    "/datos/items/view/$id": {
      "filePath": "datos/items/view/$id.tsx"
    },
    "/datos/provider/edit/$id": {
      "filePath": "datos/provider/edit/$id.tsx"
    },
    "/datos/provider/view/$id": {
      "filePath": "datos/provider/view/$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
